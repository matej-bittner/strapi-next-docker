version: "3"
services:
  next:
    build:
      context: ./frontend
      dockerfile: frontend.prod.dockerfile
    restart: unless-stopped
    depends_on:
      strapi:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://next:3000"]
      interval: 30s
      timeout: 10s
      retries: 5

  strapi:
    build:
      context: ./backend
      dockerfile: backend.prod.dockerfile
    restart: unless-stopped
    environment:
      # Environment variables...
    depends_on:
      postgresDB:
        condition: service_healthy
    volumes:
      - strapiconfig:/opt/app/config
      - strapiuploads:/opt/app/public/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://strapi:1337/admin"]
      interval: 30s
      timeout: 10s
      retries: 5

  postgresDB:
    platform: linux/amd64
    restart: unless-stopped
    image: postgres:14.5-alpine
    environment:
      # Environment variables...
    volumes:
      - strapidb:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME}"]
      interval: 15s
      timeout: 5s
      retries: 5

volumes:
  strapiconfig:
  strapidb:
  strapiuploads:

  # strapitestAdminer:
  #   image: adminer
  #   restart: unless-stopped
  #   ports:
  #     - "9090:8080"
  #   environment:
  #     - ADMINER_DEFAULT_SERVER=strapitestDB
  #   depends_on:
  #     - strapitestDB
