version: "3"
services:
  next:
    build:
      context: ./frontend
      dockerfile: frontend.prod.dockerfile
      # dockerfile: frontend.dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - strapi

  strapi:
    build:
      context: ./backend
      dockerfile: backend.prod.dockerfile
      # dockerfile: backend.dockerfile
    restart: unless-stopped
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: postgresDB
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PORT: ${DATABASE_PORT}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      NODE_ENV: ${NODE_ENV}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
    ports:
      - "1337:1337"
    depends_on:
      - postgresDB
    volumes:
      - strapiconfig:/opt/app/config
      - strapiuploads:/opt/app/public/uploads

  postgresDB:
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    image: postgres:14.5-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "5432:5432"
    volumes:
      - strapidb:/var/lib/postgresql/data/

volumes:
  strapiconfig:
  strapidb:
  strapiuploads:
  # strapitestAdminer:
  #   image: adminer
  #   restart: unless-stopped
  #   ports:
  #     - "9090:8080"
  #   environment:
  #     - ADMINER_DEFAULT_SERVER=strapitestDB
  #   depends_on:
  #     - strapitestDB
